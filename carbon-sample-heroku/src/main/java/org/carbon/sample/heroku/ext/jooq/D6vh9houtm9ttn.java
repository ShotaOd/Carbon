/*
 * This file is generated by jOOQ.
*/
package org.carbon.sample.heroku.ext.jooq;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.carbon.sample.heroku.ext.jooq.tables.SchemaVersion;
import org.carbon.sample.heroku.ext.jooq.tables.User;
import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class D6vh9houtm9ttn extends SchemaImpl {

    private static final long serialVersionUID = -233507822;

    /**
     * The reference instance of <code>d6vh9houtm9ttn</code>
     */
    public static final D6vh9houtm9ttn D6VH9HOUTM9TTN = new D6vh9houtm9ttn();

    /**
     * The table <code>d6vh9houtm9ttn.schema_version</code>.
     */
    public final SchemaVersion SCHEMA_VERSION = org.carbon.sample.heroku.ext.jooq.tables.SchemaVersion.SCHEMA_VERSION;

    /**
     * The table <code>d6vh9houtm9ttn.user</code>.
     */
    public final User USER = org.carbon.sample.heroku.ext.jooq.tables.User.USER;

    /**
     * No further instances allowed
     */
    private D6vh9houtm9ttn() {
        super("d6vh9houtm9ttn", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.USER_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            SchemaVersion.SCHEMA_VERSION,
            User.USER);
    }
}

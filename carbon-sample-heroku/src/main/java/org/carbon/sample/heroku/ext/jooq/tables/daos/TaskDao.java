/*
 * This file is generated by jOOQ.
*/
package org.carbon.sample.heroku.ext.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.carbon.component.annotation.Component;
import org.carbon.sample.heroku.ext.jooq.tables.Task;
import org.carbon.sample.heroku.ext.jooq.tables.records.TaskRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Component
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskDao extends DAOImpl<TaskRecord, org.carbon.sample.heroku.ext.jooq.tables.pojos.Task, Long> {

    /**
     * Create a new TaskDao without any configuration
     */
    public TaskDao() {
        super(Task.TASK, org.carbon.sample.heroku.ext.jooq.tables.pojos.Task.class);
    }

    /**
     * Create a new TaskDao with an attached configuration
     */
    public TaskDao(Configuration configuration) {
        super(Task.TASK, org.carbon.sample.heroku.ext.jooq.tables.pojos.Task.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(org.carbon.sample.heroku.ext.jooq.tables.pojos.Task object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.carbon.sample.heroku.ext.jooq.tables.pojos.Task> fetchById(Long... values) {
        return fetch(Task.TASK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.carbon.sample.heroku.ext.jooq.tables.pojos.Task fetchOneById(Long value) {
        return fetchOne(Task.TASK.ID, value);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<org.carbon.sample.heroku.ext.jooq.tables.pojos.Task> fetchByTitle(String... values) {
        return fetch(Task.TASK.TITLE, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<org.carbon.sample.heroku.ext.jooq.tables.pojos.Task> fetchByDescription(String... values) {
        return fetch(Task.TASK.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<org.carbon.sample.heroku.ext.jooq.tables.pojos.Task> fetchByUserId(Long... values) {
        return fetch(Task.TASK.USER_ID, values);
    }

    /**
     * Fetch records that have <code>available IN (values)</code>
     */
    public List<org.carbon.sample.heroku.ext.jooq.tables.pojos.Task> fetchByAvailable(Boolean... values) {
        return fetch(Task.TASK.AVAILABLE, values);
    }

    /**
     * Fetch records that have <code>finished IN (values)</code>
     */
    public List<org.carbon.sample.heroku.ext.jooq.tables.pojos.Task> fetchByFinished(Boolean... values) {
        return fetch(Task.TASK.FINISHED, values);
    }
}

/**
 * This class is generated by jOOQ
 */
package org.carbon.sample.ext.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.carbon.sample.ext.jooq.tables.Asset;
import org.carbon.sample.ext.jooq.tables.records.AssetRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssetDao extends DAOImpl<AssetRecord, org.carbon.sample.ext.jooq.tables.pojos.Asset, Long> {

    /**
     * Create a new AssetDao without any configuration
     */
    public AssetDao() {
        super(Asset.ASSET, org.carbon.sample.ext.jooq.tables.pojos.Asset.class);
    }

    /**
     * Create a new AssetDao with an attached configuration
     */
    public AssetDao(Configuration configuration) {
        super(Asset.ASSET, org.carbon.sample.ext.jooq.tables.pojos.Asset.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(org.carbon.sample.ext.jooq.tables.pojos.Asset object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.carbon.sample.ext.jooq.tables.pojos.Asset> fetchById(Long... values) {
        return fetch(Asset.ASSET.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.carbon.sample.ext.jooq.tables.pojos.Asset fetchOneById(Long value) {
        return fetchOne(Asset.ASSET.ID, value);
    }

    /**
     * Fetch records that have <code>asset_path IN (values)</code>
     */
    public List<org.carbon.sample.ext.jooq.tables.pojos.Asset> fetchByAssetPath(String... values) {
        return fetch(Asset.ASSET.ASSET_PATH, values);
    }

    /**
     * Fetch records that have <code>asset_type IN (values)</code>
     */
    public List<org.carbon.sample.ext.jooq.tables.pojos.Asset> fetchByAssetType(String... values) {
        return fetch(Asset.ASSET.ASSET_TYPE, values);
    }
}

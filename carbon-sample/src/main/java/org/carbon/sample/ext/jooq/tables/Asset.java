/**
 * This class is generated by jOOQ
 */
package org.carbon.sample.ext.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.carbon.sample.ext.jooq.Carbondb;
import org.carbon.sample.ext.jooq.Keys;
import org.carbon.sample.ext.jooq.tables.records.AssetRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Asset extends TableImpl<AssetRecord> {

    private static final long serialVersionUID = 675043906;

    /**
     * The reference instance of <code>carbondb.asset</code>
     */
    public static final Asset ASSET = new Asset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssetRecord> getRecordType() {
        return AssetRecord.class;
    }

    /**
     * The column <code>carbondb.asset.id</code>.
     */
    public final TableField<AssetRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>carbondb.asset.asset_path</code>.
     */
    public final TableField<AssetRecord, String> ASSET_PATH = createField("asset_path", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>carbondb.asset.asset_type</code>.
     */
    public final TableField<AssetRecord, String> ASSET_TYPE = createField("asset_type", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

    /**
     * Create a <code>carbondb.asset</code> table reference
     */
    public Asset() {
        this("asset", null);
    }

    /**
     * Create an aliased <code>carbondb.asset</code> table reference
     */
    public Asset(String alias) {
        this(alias, ASSET);
    }

    private Asset(String alias, Table<AssetRecord> aliased) {
        this(alias, aliased, null);
    }

    private Asset(String alias, Table<AssetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Carbondb.CARBONDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssetRecord> getPrimaryKey() {
        return Keys.KEY_ASSET_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssetRecord>> getKeys() {
        return Arrays.<UniqueKey<AssetRecord>>asList(Keys.KEY_ASSET_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Asset as(String alias) {
        return new Asset(alias, this);
    }

    /**
     * Rename this table
     */
    public Asset rename(String name) {
        return new Asset(name, null);
    }
}

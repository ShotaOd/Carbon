/**
 * This class is generated by jOOQ
 */
package org.carbon.sample.ext.jooq.tables;


import java.util.Arrays;
import java.util.List;
import javax.annotation.Generated;

import org.carbon.sample.ext.jooq.Carbondb;
import org.carbon.sample.ext.jooq.Keys;
import org.carbon.sample.ext.jooq.tables.records.LecturerRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.8.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Lecturer extends TableImpl<LecturerRecord> {

    private static final long serialVersionUID = 958020371;

    /**
     * The reference instance of <code>carbondb.lecturer</code>
     */
    public static final Lecturer LECTURER = new Lecturer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LecturerRecord> getRecordType() {
        return LecturerRecord.class;
    }

    /**
     * The column <code>carbondb.lecturer.id</code>.
     */
    public final TableField<LecturerRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>carbondb.lecturer.identityClass</code>.
     */
    public final TableField<LecturerRecord, String> USERNAME = createField("identityClass", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>carbondb.lecturer.email</code>.
     */
    public final TableField<LecturerRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>carbondb.lecturer.thumbnail_id</code>.
     */
    public final TableField<LecturerRecord, Long> THUMBNAIL_ID = createField("thumbnail_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>carbondb.lecturer.pr_text</code>.
     */
    public final TableField<LecturerRecord, String> PR_TEXT = createField("pr_text", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>carbondb.lecturer.password</code>.
     */
    public final TableField<LecturerRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>carbondb.lecturer.pr_text_short</code>.
     */
    public final TableField<LecturerRecord, String> PR_TEXT_SHORT = createField("pr_text_short", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>carbondb.lecturer</code> table reference
     */
    public Lecturer() {
        this("lecturer", null);
    }

    /**
     * Create an aliased <code>carbondb.lecturer</code> table reference
     */
    public Lecturer(String alias) {
        this(alias, LECTURER);
    }

    private Lecturer(String alias, Table<LecturerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Lecturer(String alias, Table<LecturerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Carbondb.CARBONDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LecturerRecord> getPrimaryKey() {
        return Keys.KEY_LECTURER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LecturerRecord>> getKeys() {
        return Arrays.<UniqueKey<LecturerRecord>>asList(Keys.KEY_LECTURER_PRIMARY, Keys.KEY_LECTURER_LECTURER_EMAIL_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LecturerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LecturerRecord, ?>>asList(Keys.LECTURER_ASSET_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Lecturer as(String alias) {
        return new Lecturer(alias, this);
    }

    /**
     * Rename this table
     */
    public Lecturer rename(String name) {
        return new Lecturer(name, null);
    }
}

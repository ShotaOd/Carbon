/**
 * This class is generated by jOOQ
 */
package org.carbon.sample.ext.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import javax.annotation.Generated;

import org.carbon.persistent.adhoc.LocalDateTimeConverter;
import org.carbon.sample.ext.jooq.Carbondb;
import org.carbon.sample.ext.jooq.Keys;
import org.carbon.sample.ext.jooq.tables.records.LecturerScheduleRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.8.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LecturerSchedule extends TableImpl<LecturerScheduleRecord> {

    private static final long serialVersionUID = -388294665;

    /**
     * The reference instance of <code>carbondb.lecturer_schedule</code>
     */
    public static final LecturerSchedule LECTURER_SCHEDULE = new LecturerSchedule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LecturerScheduleRecord> getRecordType() {
        return LecturerScheduleRecord.class;
    }

    /**
     * The column <code>carbondb.lecturer_schedule.id</code>.
     */
    public final TableField<LecturerScheduleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>carbondb.lecturer_schedule.begin_datetime</code>.
     */
    public final TableField<LecturerScheduleRecord, LocalDateTime> BEGIN_DATETIME = createField("begin_datetime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new LocalDateTimeConverter());

    /**
     * The column <code>carbondb.lecturer_schedule.end_datetime</code>.
     */
    public final TableField<LecturerScheduleRecord, LocalDateTime> END_DATETIME = createField("end_datetime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new LocalDateTimeConverter());

    /**
     * The column <code>carbondb.lecturer_schedule.lecturer_id</code>.
     */
    public final TableField<LecturerScheduleRecord, Long> LECTURER_ID = createField("lecturer_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>carbondb.lecturer_schedule</code> table reference
     */
    public LecturerSchedule() {
        this("lecturer_schedule", null);
    }

    /**
     * Create an aliased <code>carbondb.lecturer_schedule</code> table reference
     */
    public LecturerSchedule(String alias) {
        this(alias, LECTURER_SCHEDULE);
    }

    private LecturerSchedule(String alias, Table<LecturerScheduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private LecturerSchedule(String alias, Table<LecturerScheduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Carbondb.CARBONDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LecturerScheduleRecord, Long> getIdentity() {
        return Keys.IDENTITY_LECTURER_SCHEDULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LecturerScheduleRecord> getPrimaryKey() {
        return Keys.KEY_LECTURER_SCHEDULE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LecturerScheduleRecord>> getKeys() {
        return Arrays.<UniqueKey<LecturerScheduleRecord>>asList(Keys.KEY_LECTURER_SCHEDULE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LecturerScheduleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LecturerScheduleRecord, ?>>asList(Keys.LECTURER_SCHEDULE_LECTURER_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerSchedule as(String alias) {
        return new LecturerSchedule(alias, this);
    }

    /**
     * Rename this table
     */
    public LecturerSchedule rename(String name) {
        return new LecturerSchedule(name, null);
    }
}

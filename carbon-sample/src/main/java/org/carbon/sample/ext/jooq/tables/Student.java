/**
 * This class is generated by jOOQ
 */
package org.carbon.sample.ext.jooq.tables;


import java.util.Arrays;
import java.util.List;
import javax.annotation.Generated;

import org.carbon.sample.ext.jooq.Carbondb;
import org.carbon.sample.ext.jooq.Keys;
import org.carbon.sample.ext.jooq.tables.records.StudentRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.8.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Student extends TableImpl<StudentRecord> {

    private static final long serialVersionUID = 466957522;

    /**
     * The reference instance of <code>carbondb.student</code>
     */
    public static final Student STUDENT = new Student();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentRecord> getRecordType() {
        return StudentRecord.class;
    }

    /**
     * The column <code>carbondb.student.id</code>.
     */
    public final TableField<StudentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>carbondb.student.password</code>.
     */
    public final TableField<StudentRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>carbondb.student.identityClass</code>.
     */
    public final TableField<StudentRecord, String> USERNAME = createField("identityClass", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>carbondb.student.email</code>.
     */
    public final TableField<StudentRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>carbondb.student</code> table reference
     */
    public Student() {
        this("student", null);
    }

    /**
     * Create an aliased <code>carbondb.student</code> table reference
     */
    public Student(String alias) {
        this(alias, STUDENT);
    }

    private Student(String alias, Table<StudentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Student(String alias, Table<StudentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Carbondb.CARBONDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentRecord> getPrimaryKey() {
        return Keys.KEY_STUDENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentRecord>>asList(Keys.KEY_STUDENT_PRIMARY, Keys.KEY_STUDENT_STUDENT_USERNAME_UINDEX, Keys.KEY_STUDENT_STUDENT_EMAIL_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Student as(String alias) {
        return new Student(alias, this);
    }

    /**
     * Rename this table
     */
    public Student rename(String name) {
        return new Student(name, null);
    }
}

/**
 * This class is generated by jOOQ
 */
package org.carbon.sample.ext.jooq;


import javax.annotation.Generated;

import org.carbon.sample.ext.jooq.tables.Asset;
import org.carbon.sample.ext.jooq.tables.Lecturer;
import org.carbon.sample.ext.jooq.tables.LecturerApplyHistory;
import org.carbon.sample.ext.jooq.tables.LecturerRoom;
import org.carbon.sample.ext.jooq.tables.LecturerSchedule;
import org.carbon.sample.ext.jooq.tables.Product;
import org.carbon.sample.ext.jooq.tables.Role;
import org.carbon.sample.ext.jooq.tables.SchemaVersion;
import org.carbon.sample.ext.jooq.tables.Student;
import org.carbon.sample.ext.jooq.tables.User;
import org.carbon.sample.ext.jooq.tables.records.AssetRecord;
import org.carbon.sample.ext.jooq.tables.records.LecturerApplyHistoryRecord;
import org.carbon.sample.ext.jooq.tables.records.LecturerRecord;
import org.carbon.sample.ext.jooq.tables.records.LecturerRoomRecord;
import org.carbon.sample.ext.jooq.tables.records.LecturerScheduleRecord;
import org.carbon.sample.ext.jooq.tables.records.ProductRecord;
import org.carbon.sample.ext.jooq.tables.records.RoleRecord;
import org.carbon.sample.ext.jooq.tables.records.SchemaVersionRecord;
import org.carbon.sample.ext.jooq.tables.records.StudentRecord;
import org.carbon.sample.ext.jooq.tables.records.UserRecord;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>carbondb</code>
 * schema
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.8.6"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<LecturerRoomRecord, Long> IDENTITY_LECTURER_ROOM = Identities0.IDENTITY_LECTURER_ROOM;
    public static final Identity<LecturerScheduleRecord, Long> IDENTITY_LECTURER_SCHEDULE = Identities0.IDENTITY_LECTURER_SCHEDULE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AssetRecord> KEY_ASSET_PRIMARY = UniqueKeys0.KEY_ASSET_PRIMARY;
    public static final UniqueKey<LecturerRecord> KEY_LECTURER_PRIMARY = UniqueKeys0.KEY_LECTURER_PRIMARY;
    public static final UniqueKey<LecturerRecord> KEY_LECTURER_LECTURER_EMAIL_UINDEX = UniqueKeys0.KEY_LECTURER_LECTURER_EMAIL_UINDEX;
    public static final UniqueKey<LecturerApplyHistoryRecord> KEY_LECTURER_APPLY_HISTORY_PRIMARY = UniqueKeys0.KEY_LECTURER_APPLY_HISTORY_PRIMARY;
    public static final UniqueKey<LecturerRoomRecord> KEY_LECTURER_ROOM_PRIMARY = UniqueKeys0.KEY_LECTURER_ROOM_PRIMARY;
    public static final UniqueKey<LecturerScheduleRecord> KEY_LECTURER_SCHEDULE_PRIMARY = UniqueKeys0.KEY_LECTURER_SCHEDULE_PRIMARY;
    public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = UniqueKeys0.KEY_PRODUCT_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = UniqueKeys0.KEY_ROLE_PRIMARY;
    public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = UniqueKeys0.KEY_SCHEMA_VERSION_PRIMARY;
    public static final UniqueKey<StudentRecord> KEY_STUDENT_PRIMARY = UniqueKeys0.KEY_STUDENT_PRIMARY;
    public static final UniqueKey<StudentRecord> KEY_STUDENT_STUDENT_USERNAME_UINDEX = UniqueKeys0.KEY_STUDENT_STUDENT_USERNAME_UINDEX;
    public static final UniqueKey<StudentRecord> KEY_STUDENT_STUDENT_EMAIL_UINDEX = UniqueKeys0.KEY_STUDENT_STUDENT_EMAIL_UINDEX;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_USER_USERNAME_UINDEX = UniqueKeys0.KEY_USER_USER_USERNAME_UINDEX;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<LecturerRecord, AssetRecord> LECTURER_ASSET_ID_FK = ForeignKeys0.LECTURER_ASSET_ID_FK;
    public static final ForeignKey<LecturerRoomRecord, LecturerRecord> LECTURER_ROOM_LECTURER_ID_FK = ForeignKeys0.LECTURER_ROOM_LECTURER_ID_FK;
    public static final ForeignKey<LecturerScheduleRecord, LecturerRecord> LECTURER_SCHEDULE_LECTURER_ID_FK = ForeignKeys0.LECTURER_SCHEDULE_LECTURER_ID_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<LecturerRoomRecord, Long> IDENTITY_LECTURER_ROOM = createIdentity(LecturerRoom.LECTURER_ROOM, LecturerRoom.LECTURER_ROOM.ID);
        public static Identity<LecturerScheduleRecord, Long> IDENTITY_LECTURER_SCHEDULE = createIdentity(LecturerSchedule.LECTURER_SCHEDULE, LecturerSchedule.LECTURER_SCHEDULE.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AssetRecord> KEY_ASSET_PRIMARY = createUniqueKey(Asset.ASSET, "KEY_asset_PRIMARY", Asset.ASSET.ID);
        public static final UniqueKey<LecturerRecord> KEY_LECTURER_PRIMARY = createUniqueKey(Lecturer.LECTURER, "KEY_lecturer_PRIMARY", Lecturer.LECTURER.ID);
        public static final UniqueKey<LecturerRecord> KEY_LECTURER_LECTURER_EMAIL_UINDEX = createUniqueKey(Lecturer.LECTURER, "KEY_lecturer_lecturer_email_uindex", Lecturer.LECTURER.EMAIL);
        public static final UniqueKey<LecturerApplyHistoryRecord> KEY_LECTURER_APPLY_HISTORY_PRIMARY = createUniqueKey(LecturerApplyHistory.LECTURER_APPLY_HISTORY, "KEY_lecturer_apply_history_PRIMARY", LecturerApplyHistory.LECTURER_APPLY_HISTORY.ID);
        public static final UniqueKey<LecturerRoomRecord> KEY_LECTURER_ROOM_PRIMARY = createUniqueKey(LecturerRoom.LECTURER_ROOM, "KEY_lecturer_room_PRIMARY", LecturerRoom.LECTURER_ROOM.ID);
        public static final UniqueKey<LecturerScheduleRecord> KEY_LECTURER_SCHEDULE_PRIMARY = createUniqueKey(LecturerSchedule.LECTURER_SCHEDULE, "KEY_lecturer_schedule_PRIMARY", LecturerSchedule.LECTURER_SCHEDULE.ID);
        public static final UniqueKey<ProductRecord> KEY_PRODUCT_PRIMARY = createUniqueKey(Product.PRODUCT, "KEY_product_PRIMARY", Product.PRODUCT.ID);
        public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = createUniqueKey(Role.ROLE, "KEY_role_PRIMARY", Role.ROLE.ID);
        public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = createUniqueKey(SchemaVersion.SCHEMA_VERSION, "KEY_schema_version_PRIMARY", SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK);
        public static final UniqueKey<StudentRecord> KEY_STUDENT_PRIMARY = createUniqueKey(Student.STUDENT, "KEY_student_PRIMARY", Student.STUDENT.ID);
        public static final UniqueKey<StudentRecord> KEY_STUDENT_STUDENT_USERNAME_UINDEX = createUniqueKey(Student.STUDENT, "KEY_student_student_username_uindex", Student.STUDENT.USERNAME);
        public static final UniqueKey<StudentRecord> KEY_STUDENT_STUDENT_EMAIL_UINDEX = createUniqueKey(Student.STUDENT, "KEY_student_student_email_uindex", Student.STUDENT.EMAIL);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID);
        public static final UniqueKey<UserRecord> KEY_USER_USER_USERNAME_UINDEX = createUniqueKey(User.USER, "KEY_user_user_username_uindex", User.USER.USERNAME);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<LecturerRecord, AssetRecord> LECTURER_ASSET_ID_FK = createForeignKey(org.carbon.sample.ext.jooq.Keys.KEY_ASSET_PRIMARY, Lecturer.LECTURER, "lecturer_asset_id_fk", Lecturer.LECTURER.THUMBNAIL_ID);
        public static final ForeignKey<LecturerRoomRecord, LecturerRecord> LECTURER_ROOM_LECTURER_ID_FK = createForeignKey(org.carbon.sample.ext.jooq.Keys.KEY_LECTURER_PRIMARY, LecturerRoom.LECTURER_ROOM, "lecturer_room_lecturer_id_fk", LecturerRoom.LECTURER_ROOM.LECTURER_ID);
        public static final ForeignKey<LecturerScheduleRecord, LecturerRecord> LECTURER_SCHEDULE_LECTURER_ID_FK = createForeignKey(org.carbon.sample.ext.jooq.Keys.KEY_LECTURER_PRIMARY, LecturerSchedule.LECTURER_SCHEDULE, "lecturer_schedule_lecturer_id_fk", LecturerSchedule.LECTURER_SCHEDULE.LECTURER_ID);
    }
}

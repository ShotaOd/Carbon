/*
 * This file is generated by jOOQ.
*/
package org.carbon.sample.v2.ext.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.carbon.persistent.adhoc.BooleanConverter;
import org.carbon.persistent.adhoc.LocalDateTimeConverter;
import org.carbon.sample.v2.ext.jooq.Carbondb;
import org.carbon.sample.v2.ext.jooq.Keys;
import org.carbon.sample.v2.ext.jooq.tables.records.RockettyAuthClientRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RockettyAuthClient extends TableImpl<RockettyAuthClientRecord> {

    private static final long serialVersionUID = 861719338;

    /**
     * The reference instance of <code>carbondb.rocketty_auth_client</code>
     */
    public static final RockettyAuthClient ROCKETTY_AUTH_CLIENT = new RockettyAuthClient();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RockettyAuthClientRecord> getRecordType() {
        return RockettyAuthClientRecord.class;
    }

    /**
     * The column <code>carbondb.rocketty_auth_client.id</code>.
     */
    public final TableField<RockettyAuthClientRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>carbondb.rocketty_auth_client.client_id</code>.
     */
    public final TableField<RockettyAuthClientRecord, String> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.CHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>carbondb.rocketty_auth_client.client_secret</code>.
     */
    public final TableField<RockettyAuthClientRecord, String> CLIENT_SECRET = createField("client_secret", org.jooq.impl.SQLDataType.CHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>carbondb.rocketty_auth_client.valid</code>.
     */
    public final TableField<RockettyAuthClientRecord, Boolean> VALID = createField("valid", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "", new BooleanConverter());

    /**
     * The column <code>carbondb.rocketty_auth_client.expire_at</code>.
     */
    public final TableField<RockettyAuthClientRecord, LocalDateTime> EXPIRE_AT = createField("expire_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new LocalDateTimeConverter());

    /**
     * Create a <code>carbondb.rocketty_auth_client</code> table reference
     */
    public RockettyAuthClient() {
        this("rocketty_auth_client", null);
    }

    /**
     * Create an aliased <code>carbondb.rocketty_auth_client</code> table reference
     */
    public RockettyAuthClient(String alias) {
        this(alias, ROCKETTY_AUTH_CLIENT);
    }

    private RockettyAuthClient(String alias, Table<RockettyAuthClientRecord> aliased) {
        this(alias, aliased, null);
    }

    private RockettyAuthClient(String alias, Table<RockettyAuthClientRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Carbondb.CARBONDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RockettyAuthClientRecord, Long> getIdentity() {
        return Keys.IDENTITY_ROCKETTY_AUTH_CLIENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RockettyAuthClientRecord> getPrimaryKey() {
        return Keys.KEY_ROCKETTY_AUTH_CLIENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RockettyAuthClientRecord>> getKeys() {
        return Arrays.<UniqueKey<RockettyAuthClientRecord>>asList(Keys.KEY_ROCKETTY_AUTH_CLIENT_PRIMARY, Keys.KEY_ROCKETTY_AUTH_CLIENT_ROCKETTY_AUTH_CLIENT_CLIENT_ID__UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RockettyAuthClient as(String alias) {
        return new RockettyAuthClient(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RockettyAuthClient rename(String name) {
        return new RockettyAuthClient(name, null);
    }
}

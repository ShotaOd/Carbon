/*
 * This file is generated by jOOQ.
*/
package org.carbon.sample.v2.ext.jooq;


import javax.annotation.Generated;

import org.carbon.sample.v2.ext.jooq.tables.AuthClient;
import org.carbon.sample.v2.ext.jooq.tables.RockettyRanking;
import org.carbon.sample.v2.ext.jooq.tables.User;
import org.carbon.sample.v2.ext.jooq.tables.records.AuthClientRecord;
import org.carbon.sample.v2.ext.jooq.tables.records.RockettyRankingRecord;
import org.carbon.sample.v2.ext.jooq.tables.records.UserRecord;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>carbondb</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AuthClientRecord, Long> IDENTITY_AUTH_CLIENT = Identities0.IDENTITY_AUTH_CLIENT;
    public static final Identity<RockettyRankingRecord, Long> IDENTITY_ROCKETTY_RANKING = Identities0.IDENTITY_ROCKETTY_RANKING;
    public static final Identity<UserRecord, Long> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthClientRecord> KEY_AUTH_CLIENT_PRIMARY = UniqueKeys0.KEY_AUTH_CLIENT_PRIMARY;
    public static final UniqueKey<AuthClientRecord> KEY_AUTH_CLIENT_AUTH_CLIENT_CLIENT_HOST_UINDEX = UniqueKeys0.KEY_AUTH_CLIENT_AUTH_CLIENT_CLIENT_HOST_UINDEX;
    public static final UniqueKey<AuthClientRecord> KEY_AUTH_CLIENT_AUTH_CLIENT_CLIENT_ID_UINDEX = UniqueKeys0.KEY_AUTH_CLIENT_AUTH_CLIENT_CLIENT_ID_UINDEX;
    public static final UniqueKey<RockettyRankingRecord> KEY_ROCKETTY_RANKING_PRIMARY = UniqueKeys0.KEY_ROCKETTY_RANKING_PRIMARY;
    public static final UniqueKey<RockettyRankingRecord> KEY_ROCKETTY_RANKING_ROCKETTY_RANKING_INTERNAL_USER_ID__INDEX = UniqueKeys0.KEY_ROCKETTY_RANKING_ROCKETTY_RANKING_INTERNAL_USER_ID__INDEX;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_USER_EMAIL_UINDEX = UniqueKeys0.KEY_USER_USER_EMAIL_UINDEX;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AuthClientRecord, Long> IDENTITY_AUTH_CLIENT = createIdentity(AuthClient.AUTH_CLIENT, AuthClient.AUTH_CLIENT.ID);
        public static Identity<RockettyRankingRecord, Long> IDENTITY_ROCKETTY_RANKING = createIdentity(RockettyRanking.ROCKETTY_RANKING, RockettyRanking.ROCKETTY_RANKING.ID);
        public static Identity<UserRecord, Long> IDENTITY_USER = createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AuthClientRecord> KEY_AUTH_CLIENT_PRIMARY = createUniqueKey(AuthClient.AUTH_CLIENT, "KEY_auth_client_PRIMARY", AuthClient.AUTH_CLIENT.ID);
        public static final UniqueKey<AuthClientRecord> KEY_AUTH_CLIENT_AUTH_CLIENT_CLIENT_HOST_UINDEX = createUniqueKey(AuthClient.AUTH_CLIENT, "KEY_auth_client_auth_client_client_host_uindex", AuthClient.AUTH_CLIENT.CLIENT_HOST);
        public static final UniqueKey<AuthClientRecord> KEY_AUTH_CLIENT_AUTH_CLIENT_CLIENT_ID_UINDEX = createUniqueKey(AuthClient.AUTH_CLIENT, "KEY_auth_client_auth_client_client_id_uindex", AuthClient.AUTH_CLIENT.CLIENT_ID);
        public static final UniqueKey<RockettyRankingRecord> KEY_ROCKETTY_RANKING_PRIMARY = createUniqueKey(RockettyRanking.ROCKETTY_RANKING, "KEY_rocketty_ranking_PRIMARY", RockettyRanking.ROCKETTY_RANKING.ID);
        public static final UniqueKey<RockettyRankingRecord> KEY_ROCKETTY_RANKING_ROCKETTY_RANKING_INTERNAL_USER_ID__INDEX = createUniqueKey(RockettyRanking.ROCKETTY_RANKING, "KEY_rocketty_ranking_rocketty_ranking_internal_user_id__index", RockettyRanking.ROCKETTY_RANKING.INTERNAL_USER_ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID);
        public static final UniqueKey<UserRecord> KEY_USER_USER_EMAIL_UINDEX = createUniqueKey(User.USER, "KEY_user_user_email_uindex", User.USER.EMAIL);
    }
}

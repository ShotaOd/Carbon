/*
 * This file is generated by jOOQ.
*/
package org.carbon.sample.v2.ext.jooq.tables.records;


import javax.annotation.Generated;

import org.carbon.sample.v2.ext.jooq.tables.Task;
import org.carbon.sample.v2.ext.jooq.tables.interfaces.ITask;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record6<Long, String, String, Long, Boolean, Boolean>, ITask {

    private static final long serialVersionUID = -1631199628;

    /**
     * Setter for <code>carbon.task.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>carbon.task.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>carbon.task.title</code>.
     */
    @Override
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>carbon.task.title</code>.
     */
    @Override
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>carbon.task.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>carbon.task.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>carbon.task.user_id</code>.
     */
    @Override
    public void setUserId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>carbon.task.user_id</code>.
     */
    @Override
    public Long getUserId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>carbon.task.available</code>.
     */
    @Override
    public void setAvailable(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>carbon.task.available</code>.
     */
    @Override
    public Boolean getAvailable() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>carbon.task.finished</code>.
     */
    @Override
    public void setFinished(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>carbon.task.finished</code>.
     */
    @Override
    public Boolean getFinished() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Long, Boolean, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Long, Boolean, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Task.TASK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Task.TASK.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Task.TASK.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Task.TASK.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Task.TASK.AVAILABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return Task.TASK.FINISHED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getFinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value2(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value4(Long value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value5(Boolean value) {
        setAvailable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value6(Boolean value) {
        setFinished(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord values(Long value1, String value2, String value3, Long value4, Boolean value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ITask from) {
        setId(from.getId());
        setTitle(from.getTitle());
        setDescription(from.getDescription());
        setUserId(from.getUserId());
        setAvailable(from.getAvailable());
        setFinished(from.getFinished());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ITask> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(Long id, String title, String description, Long userId, Boolean available, Boolean finished) {
        super(Task.TASK);

        set(0, id);
        set(1, title);
        set(2, description);
        set(3, userId);
        set(4, available);
        set(5, finished);
    }
}
